input_species="mouse",
return_sce=T,
min_variance_decile=.9,
sce_save_dir=here::here("~/Desktop/sce_examples"),
on_disk=T)
sce.glmgp <- EWCE::drop.uninformative.genes(cortex_mrna,
level2annot="level2class",
DGE_method="glmGamPoi",
drop_nonhuman_genes=T,
input_species="mouse",
return_sce=T,
min_variance_decile=.9,
sce_save_dir=here::here("~/Desktop/sce_examples"),
on_disk=F)
devtools::document()
BiocManager::install('grimbough/biomaRt', ref = '3_12_testing')
BiocManager::install('grimbough/biomaRt', ref = '3_12_testing')
install.packages(“languageserver”)
install.packages("languageserver"")
install.packages("languageserver")
remotes::install_github("mojaveazure/seurat-disk@95d27f636e")
if (!requireNamespace("BiocManager", quietly=TRUE)) {
install.packages("BiocManager")
}
BiocManager::install("zellkonverter")
if (!requireNamespace("BiocManager", quietly=TRUE)) {
install.packages("BiocManager")
}
BiocManager::install("zellkonverter")
devtools::install_github("theislab/zellkonverter")
if (!requireNamespace("BiocManager", quietly=TRUE)) {
install.packages("BiocManager")
}
BiocManager::install("basilisk")
R.version
BiocManager::install()
BiocVersion
BiocManager::version()
BiocManager::install(version = "3.12")
BiocManager::install(version = "3.11")
135/768
381/25
241/184
25*15
381+25
381+25/25
(381+25)/25
(241+184)/184
241+184
packageVersion("HDF5Array")
version
# IMPORTANT!: set as.sparse=T if you have the latest version of HDF5Array (1.8.11)
pkg_ver <- packageVersion("HDF5Array")
pkg_ver
as.numeric(pkg_ver)
strsplit(pkg_ver, "[.]")
strsplit( "[.]", pkg_ver)
strsplit( ".", pkg_ver)
pkg_ver
strsplit(pkg_ver,". ", fixed = T)
pkg_ver
class(pkg_ver)
strsplit(as.character(pkg_ver),".", fixed = T)
pkg_ver_split <- strsplit(as.character(pkg_ver),".", fixed = T)
pkg_ver_split
pkg_ver_split <- strsplit(as.character(pkg_ver),".", fixed = T)[[1]]
paste(pkg_ver_split[1], pkg_ver_split[2])
paste(pkg_ver_split[1], pkg_ver_split[2], sep=".")
as.numeric(paste(pkg_ver_split[1], pkg_ver_split[2], sep="."))
pkg_V <- as.numeric(paste(pkg_ver_split[1], pkg_ver_split[2], sep="."))
pkg_V<1.8
# When .h5 is a file, not a folder
obj <- "/Volumes/bms20/projects/neurogenomics-lab/live/GitRepos/model_celltype_conservation/raw_data/scRNAseq/LaManno2020/LaManno2020_sparse.h5"
object <- rhdf5::h5read(file =obj, name = "LaManno2020")
object <- rhdf5::h5read(file =obj)
object <- rhdf5::h5read(file =obj, name = "")
object <- anndata::read_hdf(obj)
object <- anndata::read_hdf(obj, key = "")
rhdf5::H5Gget_info(obj)
rhdf5::H5Iget_name(obj)
h5_con <- rhdf5::H5open(obj)
object <- anndata::read_hdf(obj, key = "")
object <- anndata::read_hdf(obj)
?read_hdf
rhdf5::
h5_con <- rhdf5::H5Aopen(obj)
rhdf5::
h5_con <- rhdf5::H5Aread(obj)
rhdf5::
h5_con <- rhdf5::H5read(obj)
rhdf5::
h5_con <- rhdf5::H5Dopen(obj)
rhdf5::
h5_con <- rhdf5::H5open(obj)
rhdf5::
h5_con <- obj$H5open()
rhdf5::
h5_con <- rhdf5::H5Aopen(obj)
h5_con <- HDF5Array::h5mread(obj)
h5_con <- HDF5Array::h5mread(obj, name="exprs")
rhdf5::h5readAttributes(obj,"A")
rhdf5::h5readAttributes(obj)
rhdf5::h5ls(obj)
h5_contents <- rhdf5::h5ls(obj)
head(h5_contents)
object <- rhdf5::h5read(file =obj, name = "data")
h5_contents <- rhdf5::h5ls(obj, datasetinfo=F)
h5_contents
object <- anndata::read_hdf(obj, key = "data")
object <- anndata::read(obj)
object <- anndata::read(obj, key = "exprs")
object <- anndata::read_hdf(obj, key = "exprs")
head(h5_contents)
unique(h5_contents$name)
unique(h5_contents$group)
object <- anndata::read_hdf(obj, key = "/")
obj
rhdf5::h5const()
rhdf5::h5const(obj)
rhdf5::h5closeAll()
object <- anndata::read_hdf(obj, key = "/")
object <- rhdf5::h5read(file =obj, name = "/")
object
dim(object)
length(object)
names(object)
# When .h5 is a file, not a folder
# obj <- "/Volumes/bms20/projects/neurogenomics-lab/live/GitRepos/model_celltype_conservation/raw_data/scRNAseq/LaManno2020/LaManno2020_sparse.h5"
rhdf5::h5closeAll()
?storage.mode
ctd
ctd=EWCE::ctd
lengt(names(CTD_list))
lengt(names(CTD_list))
length(names(CTD_list))
length(ctd)
object=ctd
class(object)[1]=="list"
class(object)[1]=="list"
(c("mean_exp","specificity") %in% names(object[[1]]))
all(c("mean_exp","specificity") %in% names(object[[1]]))
message("Converting level: ",lvl)
lvl=1
message("Converting level: ",lvl)
ctd_lvl <- ctd[[lvl]]
ctd_lvl <- ctd[[lvl]]
if("median_exp" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_exp, "sparseMatrix")) else NULL
if("specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity, "sparseMatrix")) else NULL
row.names(object$mean_exp)
row.names(object$mean_exp)
row.names(ctd_lvl$mean_exp)
sce_lvl <- SingleCellExperiment::SingleCellExperiment(
assays      = list(mean_exp = DelayedArray::DelayedArray(as(ctd_lvl$mean_exp, "sparseMatrix")),
median_exp = if("median_exp" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_exp, "sparseMatrix")) else NULL,
specificity = if("specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity, "sparseMatrix")) else NULL,
median_specificity = if("median_specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_specificity, "sparseMatrix")) else NULL,
specificity_quantiles = if("specificity_quantiles" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity_quantiles, "sparseMatrix")) else NULL
),
colData     =  if("annot" %in% names(ctd_lvl)) ctd_lvl$annot else NULL,
rowData     =  row.names(ctd_lvl$mean_exp)
)
sce_lvl <- SingleCellExperiment::SingleCellExperiment(
assays      = list(mean_exp = DelayedArray::DelayedArray(as(ctd_lvl$mean_exp, "sparseMatrix")),
median_exp = if("median_exp" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_exp, "sparseMatrix")) else NULL,
specificity = if("specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity, "sparseMatrix")) else NULL,
median_specificity = if("median_specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_specificity, "sparseMatrix")) else NULL,
specificity_quantiles = if("specificity_quantiles" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity_quantiles, "sparseMatrix")) else NULL
),
colData     =  if("annot" %in% names(ctd_lvl)) ctd_lvl$annot else NULL,
# rowData     =  row.names(ctd_lvl$mean_exp)
)
sce_lvl <- SingleCellExperiment::SingleCellExperiment(
assays      = list(mean_exp = DelayedArray::DelayedArray(as(ctd_lvl$mean_exp, "sparseMatrix")),
median_exp = if("median_exp" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_exp, "sparseMatrix")) else NULL,
specificity = if("specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity, "sparseMatrix")) else NULL,
median_specificity = if("median_specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_specificity, "sparseMatrix")) else NULL,
specificity_quantiles = if("specificity_quantiles" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity_quantiles, "sparseMatrix")) else NULL
),
# colData     =  if("annot" %in% names(ctd_lvl)) ctd_lvl$annot else NULL,
rowData     =  row.names(ctd_lvl$mean_exp)
)
ctd_lvl$annot
data.frame(ctd_lvl$annot)
head(data.frame(ctd_lvl$annot))
data.frame(ctd_lvl$annot) %>% `colnames<-`(paste("level",lvl,sep="_"))
library(dplyr)
data.frame(ctd_lvl$annot) %>% `colnames<-`(paste("level",lvl,sep="_"))
head(data.frame(ctd_lvl$annot) %>% `colnames<-`(paste("level",lvl,sep="_")))
sce_lvl <- SingleCellExperiment::SingleCellExperiment(
assays      = list(mean_exp = DelayedArray::DelayedArray(as(ctd_lvl$mean_exp, "sparseMatrix")),
median_exp = if("median_exp" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_exp, "sparseMatrix")) else NULL,
specificity = if("specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity, "sparseMatrix")) else NULL,
median_specificity = if("median_specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_specificity, "sparseMatrix")) else NULL,
specificity_quantiles = if("specificity_quantiles" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity_quantiles, "sparseMatrix")) else NULL
),
colData     =  if("annot" %in% names(ctd_lvl)) data.frame(ctd_lvl$annot) %>% `colnames<-`(paste("level",lvl,sep="_")) else NULL,
rowData     =  row.names(ctd_lvl$mean_exp)
)
sce_lvl <- SingleCellExperiment::SingleCellExperiment(
assays      = list(mean_exp = DelayedArray::DelayedArray(as(ctd_lvl$mean_exp, "sparseMatrix")),
median_exp = if("median_exp" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_exp, "sparseMatrix")) else NULL,
specificity = if("specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity, "sparseMatrix")) else NULL,
median_specificity = if("median_specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_specificity, "sparseMatrix")) else NULL,
specificity_quantiles = if("specificity_quantiles" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity_quantiles, "sparseMatrix")) else NULL
),
colData     =  if("annot" %in% names(ctd_lvl)) data.frame(ctd_lvl$annot, ctd_lvl$annot) %>% `colnames<-`(paste("level",lvl,sep="_")) %>% `row.names<-`()  else NULL,
rowData     =  row.names(ctd_lvl$mean_exp)
)
sce_lvl <- SingleCellExperiment::SingleCellExperiment(
assays      = list(mean_exp = DelayedArray::DelayedArray(as(ctd_lvl$mean_exp, "sparseMatrix")),
median_exp = if("median_exp" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_exp, "sparseMatrix")) else NULL,
specificity = if("specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity, "sparseMatrix")) else NULL,
median_specificity = if("median_specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_specificity, "sparseMatrix")) else NULL,
specificity_quantiles = if("specificity_quantiles" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity_quantiles, "sparseMatrix")) else NULL
),
colData     =  if("annot" %in% names(ctd_lvl)) data.frame(ctd_lvl$annot, ctd_lvl$annot) %>% `colnames<-`(paste("level",lvl,sep="_")) else NULL,
rowData     =  row.names(ctd_lvl$mean_exp)
)
names(ctd_lvl)
if("annot" %in% names(ctd_lvl)) data.frame(ctd_lvl$annot, ctd_lvl$annot) %>% `colnames<-`(paste("level",lvl,sep="_")) else NULL
row.names(data.frame(ctd_lvl$annot, ctd_lvl$annot) )
sce_lvl <- SingleCellExperiment::SingleCellExperiment(
assays      = list(mean_exp = DelayedArray::DelayedArray(as(ctd_lvl$mean_exp, "sparseMatrix")),
median_exp = if("median_exp" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_exp, "sparseMatrix")) else NULL,
specificity = if("specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity, "sparseMatrix")) else NULL,
median_specificity = if("median_specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_specificity, "sparseMatrix")) else NULL,
specificity_quantiles = if("specificity_quantiles" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity_quantiles, "sparseMatrix")) else NULL
),
colData     =  if("annot" %in% names(ctd_lvl)) data.frame(ctd_lvl$annot, row.names = ctd_lvl$annot) %>% `colnames<-`(paste("level",lvl,sep="_")) else NULL,
rowData     =  row.names(ctd_lvl$mean_exp)
)
dim(mean_exp)
dim(ctd_lvl$mean_exp)
dim(ctd_lvl$specificity)
dim9ctd_lvl$annot
dim9ctd_lvl$annot
dim(ctd_lvl$annot)
length(ctd_lvl$annot)
colnames(ctd_lvl$mean_exp)
sce_lvl <- SingleCellExperiment::SingleCellExperiment(
assays      = list(mean_exp = DelayedArray::DelayedArray(as(ctd_lvl$mean_exp, "sparseMatrix")),
median_exp = if("median_exp" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_exp, "sparseMatrix")) else NULL,
specificity = if("specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity, "sparseMatrix")) else NULL,
median_specificity = if("median_specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_specificity, "sparseMatrix")) else NULL,
specificity_quantiles = if("specificity_quantiles" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity_quantiles, "sparseMatrix")) else NULL
),
colData     =  data.frame(colnames(ctd_lvl$mean_exp)) %>% `colnames<-`(paste("level",lvl,sep="_")),
rowData     =  row.names(ctd_lvl$mean_exp)
)
sce_lvl
sce_lvl <- SingleCellExperiment::SingleCellExperiment(
assays      = list(mean_exp = DelayedArray::DelayedArray(as(ctd_lvl$mean_exp, "sparseMatrix")),
median_exp = if("median_exp" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_exp, "sparseMatrix")) else NULL,
specificity = if("specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity, "sparseMatrix")) else NULL,
median_specificity = if("median_specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_specificity, "sparseMatrix")) else NULL,
specificity_quantiles = if("specificity_quantiles" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity_quantiles, "sparseMatrix")) else NULL
),
colData     =  data.frame(colnames(ctd_lvl$mean_exp)) %>% `colnames<-`(paste("level",lvl,sep="_")),
rowData     =  data.frame(gene=row.names(ctd_lvl$mean_exp), row.names = row.names(ctd_lvl$mean_exp))
)
sce_lvl
sce_list <- lapply(1:length(ctd), function(lvl){
message("Converting level:",lvl)
ctd_lvl <- ctd[[lvl]]
SingleCellExperiment::SingleCellExperiment(
assays      = list(mean_exp = DelayedArray::DelayedArray(as(ctd_lvl$mean_exp, "sparseMatrix")),
median_exp = if("median_exp" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_exp, "sparseMatrix")) else NULL,
specificity = if("specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity, "sparseMatrix")) else NULL,
median_specificity = if("median_specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_specificity, "sparseMatrix")) else NULL,
specificity_quantiles = if("specificity_quantiles" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity_quantiles, "sparseMatrix")) else NULL
),
colData     =  data.frame(colnames(ctd_lvl$mean_exp)) %>% `colnames<-`(paste("level",lvl,sep="_")),
rowData     =  data.frame(gene=row.names(ctd_lvl$mean_exp), row.names = row.names(ctd_lvl$mean_exp))
)
})
sce_list
is.null(names(ctd))
#### Name CTD levels ####
if(is.null(names(ctd))){
names(ctd) <- paste0("level_",1:length(ctd))
} else {
names(ctd) <- names(ctd)
}
names(ctd)
names(ctd)
message("Converting level:",lvl)
lvl=names(ctd)[1]
lvl
ctd_lvl <- ctd[[lvl]]
ctd_lvl
sce_list <- lapply(names(ctd), function(lvl){
message("Converting level:",lvl)
ctd_lvl <- ctd[[lvl]]
SingleCellExperiment::SingleCellExperiment(
assays      = list(mean_exp = DelayedArray::DelayedArray(as(ctd_lvl$mean_exp, "sparseMatrix")),
median_exp = if("median_exp" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_exp, "sparseMatrix")) else NULL,
specificity = if("specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity, "sparseMatrix")) else NULL,
median_specificity = if("median_specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_specificity, "sparseMatrix")) else NULL,
specificity_quantiles = if("specificity_quantiles" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity_quantiles, "sparseMatrix")) else NULL
),
colData     =  data.frame(colnames(ctd_lvl$mean_exp)) %>% `colnames<-`(paste("level",lvl,sep="_")),
rowData     =  data.frame(gene=row.names(ctd_lvl$mean_exp), row.names = row.names(ctd_lvl$mean_exp))
)
})
sce_list <- lapply(names(ctd), function(lvl){
message("Converting level: ",lvl)
ctd_lvl <- ctd[[lvl]]
SingleCellExperiment::SingleCellExperiment(
assays      = list(mean_exp = DelayedArray::DelayedArray(as(ctd_lvl$mean_exp, "sparseMatrix")),
median_exp = if("median_exp" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_exp, "sparseMatrix")) else NULL,
specificity = if("specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity, "sparseMatrix")) else NULL,
median_specificity = if("median_specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_specificity, "sparseMatrix")) else NULL,
specificity_quantiles = if("specificity_quantiles" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity_quantiles, "sparseMatrix")) else NULL
),
colData     =  data.frame(colnames(ctd_lvl$mean_exp)) %>% `colnames<-`(paste("level",lvl,sep="_")),
rowData     =  data.frame(gene=row.names(ctd_lvl$mean_exp), row.names = row.names(ctd_lvl$mean_exp))
)
}) %>% `names<-`(names(ctd))
sce_list
class(sce_list) <- "SCE_list"
class(sce_list)
#### CTD class ####
if(class(object)[1]=="list" & all(c("mean_exp","specificity") %in% names(object[[1]])) ){
messager("+ CTD ==> SingleCellExperiment",v=verbose)
ctd <- object
#### Name CTD levels ####
if(is.null(names(ctd))){
names(ctd) <- paste0("level_",1:length(ctd))
} else {
names(ctd) <- names(ctd)
}
sce_list <- lapply(names(ctd), function(lvl){
message("Converting level: ",lvl)
ctd_lvl <- ctd[[lvl]]
SingleCellExperiment::SingleCellExperiment(
assays      = list(mean_exp = DelayedArray::DelayedArray(as(ctd_lvl$mean_exp, "sparseMatrix")),
median_exp = if("median_exp" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_exp, "sparseMatrix")) else NULL,
specificity = if("specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity, "sparseMatrix")) else NULL,
median_specificity = if("median_specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_specificity, "sparseMatrix")) else NULL,
specificity_quantiles = if("specificity_quantiles" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity_quantiles, "sparseMatrix")) else NULL
),
colData     =  data.frame(colnames(ctd_lvl$mean_exp)) %>% `colnames<-`(paste("level",lvl,sep="_")),
rowData     =  data.frame(gene=row.names(ctd_lvl$mean_exp), row.names = row.names(ctd_lvl$mean_exp))
)
}) %>% `names<-`(names(ctd))
class(sce_list) <- "SCE_list"
}
messager("+ CTD ==> SingleCellExperiment",v=verbose)
ewce_classes <- c("EWCE_list","SCE_list")
#### CTD class ####
if(class(object)[1]=="list" & all(c("mean_exp","specificity") %in% names(object[[1]])) ){
messager("+ CTD ==> SingleCellExperiment",v=verbose)
ctd <- object
#### Name CTD levels ####
if(is.null(names(ctd))){
names(ctd) <- paste0("level_",1:length(ctd))
} else {
names(ctd) <- names(ctd)
}
sce_list <- lapply(names(ctd), function(lvl){
message("Converting level: ",lvl)
ctd_lvl <- ctd[[lvl]]
SingleCellExperiment::SingleCellExperiment(
assays      = list(mean_exp = DelayedArray::DelayedArray(as(ctd_lvl$mean_exp, "sparseMatrix")),
median_exp = if("median_exp" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_exp, "sparseMatrix")) else NULL,
specificity = if("specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity, "sparseMatrix")) else NULL,
median_specificity = if("median_specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_specificity, "sparseMatrix")) else NULL,
specificity_quantiles = if("specificity_quantiles" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity_quantiles, "sparseMatrix")) else NULL
),
colData     =  data.frame(colnames(ctd_lvl$mean_exp)) %>% `colnames<-`(paste("level",lvl,sep="_")),
rowData     =  data.frame(gene=row.names(ctd_lvl$mean_exp), row.names = row.names(ctd_lvl$mean_exp))
)
}) %>% `names<-`(names(ctd))
class(sce_list) <- "SCE_list"
object <- sce_list
}
library(EWCE)
#### Name CTD levels ####
if(is.null(names(ctd))){
names(ctd) <- paste0("level_",1:length(ctd))
} else {
names(ctd) <- names(ctd)
}
ctd
sce_list <- lapply(names(ctd), function(lvl){
message("Converting level: ",lvl)
ctd_lvl <- ctd[[lvl]]
SingleCellExperiment::SingleCellExperiment(
assays      = list(mean_exp = DelayedArray::DelayedArray(as(ctd_lvl$mean_exp, "sparseMatrix")),
median_exp = if("median_exp" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_exp, "sparseMatrix")) else NULL,
specificity = if("specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity, "sparseMatrix")) else NULL,
median_specificity = if("median_specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_specificity, "sparseMatrix")) else NULL,
specificity_quantiles = if("specificity_quantiles" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity_quantiles, "sparseMatrix")) else NULL
),
colData     =  data.frame(colnames(ctd_lvl$mean_exp)) %>% `colnames<-`(paste("level",lvl,sep="_")),
rowData     =  data.frame(gene=row.names(ctd_lvl$mean_exp), row.names = row.names(ctd_lvl$mean_exp))
)
}) %>% `names<-`(names(ctd))
class(sce_list) <- "SCE_list"
sce_list
sce_list <- lapply(names(ctd), function(lvl){
message("Converting level: ",lvl)
ctd_lvl <- ctd[[lvl]]
SingleCellExperiment::SingleCellExperiment(
assays      = list(mean_exp = DelayedArray::DelayedArray(as(ctd_lvl$mean_exp, "sparseMatrix")),
median_exp = if("median_exp" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_exp, "sparseMatrix")) else NULL,
specificity = if("specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity, "sparseMatrix")) else NULL,
median_specificity = if("median_specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_specificity, "sparseMatrix")) else NULL,
specificity_quantiles = if("specificity_quantiles" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity_quantiles, "sparseMatrix")) else NULL
),
colData     =  data.frame(colnames(ctd_lvl$mean_exp)) %>% `colnames<-`(lvl),
rowData     =  data.frame(gene=row.names(ctd_lvl$mean_exp), row.names = row.names(ctd_lvl$mean_exp))
)
}) %>% `names<-`(names(ctd))
sce_list
library(EWCE)
sce_list <- lapply(names(ctd), function(lvl){
message("Converting level: ",lvl)
ctd_lvl <- ctd[[lvl]]
SingleCellExperiment::SingleCellExperiment(
assays      = list(mean_exp = DelayedArray::DelayedArray(as(ctd_lvl$mean_exp, "sparseMatrix")),
median_exp = if("median_exp" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_exp, "sparseMatrix")) else NULL,
specificity = if("specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity, "sparseMatrix")) else NULL,
median_specificity = if("median_specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_specificity, "sparseMatrix")) else NULL,
specificity_quantiles = if("specificity_quantiles" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity_quantiles, "sparseMatrix")) else NULL
),
colData     =  data.frame(colnames(ctd_lvl$mean_exp)) %>% `colnames<-`(lvl),
rowData     =  data.frame(gene=row.names(ctd_lvl$mean_exp), row.names = row.names(ctd_lvl$mean_exp))
)
}) %>% `names<-`(names(ctd))
sce_list
SummarizedExperiment::assay(sce_list$level_1, "median_exp")
object <- readRDS("~/Desktop/model_celltype_conservation/processed_data/EWCE/CTD_list.rds")[[1]]
object
names(object)
# object <- readRDS("~/Desktop/model_celltype_conservation/processed_data/EWCE/CTD_list.rds")[[1]]
ctd <- object
#### Name CTD levels ####
if(is.null(names(ctd))){
names(ctd) <- paste0("level_",1:length(ctd))
} else {
names(ctd) <- names(ctd)
}
sce_list <- lapply(names(ctd), function(lvl){
message("Converting level: ",lvl)
ctd_lvl <- ctd[[lvl]]
SingleCellExperiment::SingleCellExperiment(
assays      = list(mean_exp = DelayedArray::DelayedArray(as(ctd_lvl$mean_exp, "sparseMatrix")),
median_exp = if("median_exp" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_exp, "sparseMatrix")) else NULL,
specificity = if("specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity, "sparseMatrix")) else NULL,
median_specificity = if("median_specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_specificity, "sparseMatrix")) else NULL,
specificity_quantiles = if("specificity_quantiles" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity_quantiles, "sparseMatrix")) else NULL
),
colData     =  data.frame(colnames(ctd_lvl$mean_exp)) %>% `colnames<-`(lvl),
rowData     =  data.frame(gene=row.names(ctd_lvl$mean_exp), row.names = row.names(ctd_lvl$mean_exp))
)
}) %>% `names<-`(names(ctd))
lvl=names(ctd)[1]
message("Converting level: ",lvl)
ctd_lvl <- ctd[[lvl]]
SingleCellExperiment::SingleCellExperiment(
assays      = list(mean_exp = DelayedArray::DelayedArray(as(ctd_lvl$mean_exp, "sparseMatrix")),
median_exp = if("median_exp" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_exp, "sparseMatrix")) else NULL,
specificity = if("specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity, "sparseMatrix")) else NULL,
median_specificity = if("median_specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_specificity, "sparseMatrix")) else NULL,
specificity_quantiles = if("specificity_quantiles" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity_quantiles, "sparseMatrix")) else NULL
),
colData     =  data.frame(colnames(ctd_lvl$mean_exp)) %>% `colnames<-`(lvl),
rowData     =  data.frame(gene=row.names(ctd_lvl$mean_exp), row.names = row.names(ctd_lvl$mean_exp))
)
SingleCellExperiment::SingleCellExperiment(
assays      = list(mean_exp = DelayedArray::DelayedArray(as(ctd_lvl$mean_exp, "sparseMatrix")),
# median_exp = if("median_exp" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_exp, "sparseMatrix")) else NULL,
specificity = if("specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity, "sparseMatrix")) else NULL,
# median_specificity = if("median_specificity" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$median_specificity, "sparseMatrix")) else NULL,
specificity_quantiles = if("specificity_quantiles" %in% names(ctd_lvl)) DelayedArray::DelayedArray(as(ctd_lvl$specificity_quantiles, "sparseMatrix")) else NULL
),
colData     =  data.frame(colnames(ctd_lvl$mean_exp)) %>% `colnames<-`(lvl),
rowData     =  data.frame(gene=row.names(ctd_lvl$mean_exp), row.names = row.names(ctd_lvl$mean_exp))
)
matrix_list <- list()
#### Use matrices that are present ###
matrix_list <- list()
for(mtx_name %in% c("mean_exp","median_exp","specificity","median_specificity","specificity_quantiles")){
if(mtx_name %in% names(ctd_lvl)){matrix_list[mtx_name] <- DelayedArray::DelayedArray(as(ctd_lvl[[mtx_name]], "sparseMatrix")) }
}
for(mtx_name in c("mean_exp","median_exp","specificity","median_specificity","specificity_quantiles")){
if(mtx_name %in% names(ctd_lvl)){ matrix_list[mtx_name] <- DelayedArray::DelayedArray(as(ctd_lvl[[mtx_name]], "sparseMatrix")) }
}
for(mtx_name in c("mean_exp","median_exp","specificity","median_specificity","specificity_quantiles")){
if(mtx_name %in% names(ctd_lvl)){ matrix_list[[mtx_name]] <- DelayedArray::DelayedArray(as(ctd_lvl[[mtx_name]], "sparseMatrix")) }
}
#### Use matrices that are present ###
matrix_list <- list()
for(mtx_name in c("mean_exp","median_exp","specificity","median_specificity","specificity_quantiles")){
if(mtx_name %in% names(ctd_lvl)){ matrix_list[[mtx_name]] <- DelayedArray::DelayedArray(as(ctd_lvl[[mtx_name]], "sparseMatrix")) }
}
matrix_list
str(matrix_list)
names(matrix_list)
matrix_list[[1]]
SingleCellExperiment::SingleCellExperiment(
assays      =  matrix_list,
colData     =  data.frame(colnames(matrix_list[[1]])) %>% `colnames<-`(lvl),
rowData     =  data.frame(gene=row.names(matrix_list[[1]]), row.names = row.names(matrix_list[[1]]))
)
library(EWCE)
library(EWCE)
library(EWCE)
?Reduce
library(EWCE)
library(EWCE)
